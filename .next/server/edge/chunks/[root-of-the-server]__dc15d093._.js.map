{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/src/middleware.ts"],"sourcesContent":["import { betterFetch } from \"@better-fetch/fetch\";\nimport type { auth } from \"@/lib/auth\";\nimport { NextRequest, NextResponse } from \"next/server\";\n \ntype Session = typeof auth.$Infer.Session;\n \nexport async function middleware(request: NextRequest) {\n\tconst { data: session } = await betterFetch<Session>(\"/api/auth/get-session\", {\n\t\tbaseURL: request.nextUrl.origin,\n\t\theaders: {\n\t\t\tcookie: request.headers.get(\"cookie\") || \"\", // Forward the cookies from the request\n\t\t},\n\t});\n \n\tif (!session) {\n\t\treturn NextResponse.redirect(new URL(\"/login\", request.url));\n\t}\n \n\treturn NextResponse.next();\n}\n \nexport const config = {\n\tmatcher: [\"/course\",\"/dashboard/:path*\"], // :path* คือป้องกันทุก route ที่อยู่ภายใต้ dashboard\n};"],"names":[],"mappings":";;;;AAAA;AAEA;AAAA;;;AAIO,eAAe,WAAW,OAAoB;IACpD,MAAM,EAAE,MAAM,OAAO,EAAE,GAAG,MAAM,CAAA,GAAA,mKAAA,CAAA,cAAW,AAAD,EAAW,yBAAyB;QAC7E,SAAS,QAAQ,OAAO,CAAC,MAAM;QAC/B,SAAS;YACR,QAAQ,QAAQ,OAAO,CAAC,GAAG,CAAC,aAAa;QAC1C;IACD;IAEA,IAAI,CAAC,SAAS;QACb,OAAO,6LAAA,CAAA,eAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,UAAU,QAAQ,GAAG;IAC3D;IAEA,OAAO,6LAAA,CAAA,eAAY,CAAC,IAAI;AACzB;AAEO,MAAM,SAAS;IACrB,SAAS;QAAC;QAAU;KAAoB;AACzC"}}]
}